<?xml version="1.0" encoding="UTF-8"?>
<FlowConfiguration>
    <id>ingv</id>
    <name>NURC: INGV ingestion</name>
    <description>Create images from netcdf publish on GeoServer</description>
	
    <corePoolSize>2</corePoolSize>
    <maximumPoolSize>2</maximumPoolSize>
    <keepAliveTime>1500</keepAliveTime>
    <workQueueSize>100</workQueueSize>
	
    <autorun>true</autorun>
	
    <EventGeneratorConfiguration>
        <id>id</id>
        <serviceID>fsEventGeneratorService</serviceID>

        <wildCard>*_RFVL.nc.gz</wildCard>

        <!-- CUSTOMIZABLE : netcdf input directory -->
        <watchDirectory>models/in</watchDirectory>

        <osType>OS_UNDEFINED</osType>
        <eventType>FILE_ADDED</eventType>
        <interval>2</interval> <!-- every 2 seconds -->
    </EventGeneratorConfiguration>
	
    <EventConsumerConfiguration>
        <id>NURCModels</id>
		
        <listenerId>NURCModelsLogger</listenerId>
        <listenerId>NURCModelsCumulator</listenerId>

        <performBackup>false</performBackup>
        <preserveInput>false</preserveInput>
        
        
        <FreeMarker>
          <!-- Action using NCML to rename variables as watvel-u, watvel-v -->
          <serviceID>FreeMarkerGeneratorService</serviceID>
          <id>freemarker</id>
          <description>description</description>
          <name>FreeMarkerConfiguration</name>
          
          <dirty>false</dirty>
          <listenerConfigurations/>
          <failIgnored>false</failIgnored>
          <!-- should be located into the config dir -->
          <input>NCML.xml</input>
          
          <output>tmp_out/</output>
          <nToN>false</nToN>
        </FreeMarker>
        

        <Netcdf2GeotiffConfiguration>
            <id>netcdf2geotiff</id>
            <serviceID>Netcdf2GeotiffService</serviceID>

            <name>NetCDF to GeoTIFF</name>
            <description>NURC INGV: netcdf -> geotiff</description>
            
            <!-- if layerParentDirectory is not defined the dir hierarchy will be created inside the tempdir -->
            <!--<layerParentDirectory>/opt/data/models/arw_3km_run00/</layerParentDirectory>-->
			
            <crs>EPSG:4326</crs>
            <envelope/>
            <metocDictionaryPath>dict.xml</metocDictionaryPath>
			
            <flipY>true</flipY>

            <variables>
                <string>watvel-u</string>
                <string>watvel-v</string>
            </variables>

            <outputConfiguration>
                <!-- The mosaic Dir to be set in the ImageMosaicCommand. -->
                <entry>
                    <string>mosaicPath</string>
                    <!-- CUSTOMIZABLE : mosaic dir -->
                    <string>/tmp/ingv/mosaic/</string>
                </entry>
            </outputConfiguration>

            <listenerId>NURCModelsLogger</listenerId>
            <listenerId>NURCModelsCumulator</listenerId>
            <listenerId>NURCModelsStatus</listenerId>
            <dynamicTokens>
              <stringToken>
                <name>runtime</name>
                <base>${FILENAME}</base>
                <regex>.*_([0-9]{4})([0-9]{2})([0-9]{2})_[0-9]{8}_.*</regex>
                <compose>${1}${2}${3}T000000000Z</compose>
              </stringToken>
            </dynamicTokens>
        </Netcdf2GeotiffConfiguration>
				
        <ScriptingConfiguration>
            <serviceID>ScriptingService</serviceID>

            <id>uvmerge</id>
            <name>UV components merge</name>
            <description>preprocessing Groovy Script</description>

            <listenerId>NURCModelsLogger</listenerId>
            <listenerId>NURCModelsCumulator</listenerId>
            <listenerId>NURCModelsStatus</listenerId>

            <language>groovy</language>
            <scriptFile>uvmerge.groovy</scriptFile>

            <properties>
                <!-- recognize the IMC to merge -->
                <entry>
                    <string>imcRegex</string>
                    <string>watvel.*_imc.xml</string>
                </entry>
                <!--Composing outdir name-->
                <!-- outdir = prefixcaptgrp+outdirname+suffixcaptgrp-->
                <entry>
                    <string>outDirName</string>
                    <string>_</string>
                </entry>
                <entry>
                    <string>suffixRegex</string>
                    <string>.*_([0-9]+T[0-9]+Z)</string>
                </entry>
                <!-- captured group is used int the output image name -->
                <!-- output name will be outFileBaseName_captgrp  -->
                <entry>
                    <string>imageNameRegex</string>
                    <string>watvel.._(.*).tiff</string>
                </entry>
                <entry>
                    <string>outFileBaseName</string>
                    <string>watvel</string>
                </entry>

                <entry>
                    <string>prefixRegex</string>
                    <string>(watvel).*</string>
                </entry>
                <entry>
                    <string>defaultStyle</string>
                    <string>garrows</string>
                </entry>
                <entry>
                    <string>mosaicPath</string>
                    <!-- CUSTOMIZABLE : mosaic dir -->
                    <string>/tmp/ingv/watvelingv/</string>
                </entry>
            </properties>
        </ScriptingConfiguration>

        <ForecastCleanerConfiguration>
            <serviceID>ForecastCleanerService</serviceID>

            <id>forecastcleaner</id>
            <name>Forecast cleaner</name>
            <description>Add IMC commands for removing old forecast granules</description>

            <listenerId>NURCModelsLogger</listenerId>
            <listenerId>NURCModelsCumulator</listenerId>
            <listenerId>NURCModelsStatus</listenerId>

            <datastoreFileName>datastore.properties</datastoreFileName>
            <!-- CUSTOMIZABLE : the name is the last part of the mosaic dir name -->
            <typeName>watvelingv</typeName> 

            <!-- forecast attribute name shll be extracted from the index prop files -->
            <forecastAttribute>forecast</forecastAttribute>

            <imcRegEx>watvel.*xml</imcRegEx>
            <imageRegEx>watvel_.*_.*_.*_.*_.*_.*.tiff</imageRegEx>

            <!-- watvel_0002.000_0002.000_20100801T000000000Z_20100801T030000000Z_0_1.0E37.tiff -->
            <forecastRegEx>watvel_.*_.*_.*_(.*)_.*_.*.tiff</forecastRegEx>
            <runtimeRegEx>watvel_.*_.*_(.*)_.*_.*_.*.tiff</runtimeRegEx>
            <elevationRegEx>watvel_(.*)_.*_.*_.*_.*_.*.tiff</elevationRegEx>

        </ForecastCleanerConfiguration>

        <ImageMosaicActionConfiguration>
            <serviceID>ImageMosaicGeneratorService</serviceID>

            <id>imagemosaic</id>
            <name>Configure mosaic</name>
            <description>ImageMosaicService</description>

            <listenerId>NURCModelsLogger</listenerId>
            <listenerId>NURCModelsCumulator</listenerId>
            <listenerId>NURCModelsStatus</listenerId>

            <crs>EPSG:4326</crs>

            <envelope/>

            <dataTransferMethod>EXTERNAL</dataTransferMethod>

            <!-- CUSTOMIZABLE : geoserver credentials -->
            <geoserverUID>admin</geoserverUID>
            <geoserverPWD>geoserver</geoserverPWD>
            <geoserverURL>http://localhost:8080/geoserver</geoserverURL>
            <!-- CUSTOMIZABLE -->
            <defaultNamespace>nurc</defaultNamespace>
            <storeName>watvelingv</storeName> <!-- will be created if not exists -->
            <layerName>watvelingv</layerName> <!-- will be created if not exists -->

            <defaultStyle>watervelocityCR_meters</defaultStyle>

            <wmsPath>/</wmsPath>
            <backgroundValue>NaN</backgroundValue>
            <outputTransparentColor/>
            <inputTransparentColor/>

            <allowMultithreading>true</allowMultithreading>
            <useJaiImageRead>false</useJaiImageRead>

            <tileSizeH>256</tileSizeH>
            <tileSizeW>256</tileSizeW>

            <NativeMinBoundingBoxX>-180</NativeMinBoundingBoxX>
            <NativeMinBoundingBoxY>-90</NativeMinBoundingBoxY>
            <NativeMaxBoundingBoxX>180</NativeMaxBoundingBoxX>
            <NativeMaxBoundingBoxY>90</NativeMaxBoundingBoxY>

            <latLonMinBoundingBoxX>-180</latLonMinBoundingBoxX>
            <latLonMinBoundingBoxY>-90</latLonMinBoundingBoxY>
            <latLonMaxBoundingBoxX>180</latLonMaxBoundingBoxX>
            <latLonMaxBoundingBoxY>90</latLonMaxBoundingBoxY>

            <!--NONE, REPROJECT_TO_DECLARED, FORCE_DECLARED-->
            <projectionPolicy>NONE</projectionPolicy>
            <!-- METADATA -->
            <timeDimEnabled>true</timeDimEnabled>
            <!-- LIST, CONTINUOUS_INTERVAL, DISCRETE_INTERVAL -->
            <timePresentationMode>LIST</timePresentationMode>
            <elevDimEnabled>true</elevDimEnabled>
            <elevationPresentationMode>LIST</elevationPresentationMode>
            <!--  <dirName>DIR</dirName>-->
            <styles/>

            <timeAttribute>forecast</timeAttribute> <!-- defaults to "ingestion" if not defined -->
            <elevationAttribute>depth</elevationAttribute> <!-- defaults to "elevation" if not defined -->

            <!-- default file loaded from this actions' config dir - only used when creating the mosaic -->
            <datastorePropertiesPath>datastore.properties</datastorePropertiesPath>
            <!--<timeRegex>[0-9]{8}T[0-9]{9}Z(\?!.\*[0-9]{8}T[0-9]{9}Z.\*)</timeRegex>-->
            <timeRegex><![CDATA[(?<=\\d{8}T\\d{9}Z_)\\d{8}T\\d{9}Z]]></timeRegex> <!-- the forecast time -->
            <!--<elevationRegex><![CDATA[(?<=_)(\\d{4}\\.\\d{3})(?=_)]]></elevationRegex>-->
            <elevationRegex><![CDATA[(?<=[^_]*_)(\\d+\\.\\d+)(?=_\\d+\\.\\d+_\\d{8}T)]]></elevationRegex> <!-- the Z0 -->

        </ImageMosaicActionConfiguration>

		
<!--        <GeoServerReloadConfiguration>
            <serviceID>GeoServerReloadService</serviceID>
            <id>GeoServerReloadAction</id>
            <name>GeoServerReloadAction</name>
            <description>GeoServerReload</description>

            <listenerId>NURCModelsLogger</listenerId>
            <listenerId>NURCModelsCumulator</listenerId>
            <listenerId>NURCModelsStatus</listenerId>
			
            <dirty>false</dirty>
            <failIgnored>false</failIgnored>
		  

            <geoserverList>/opt/GEOBATCH_DATA_DIR/commons/GeoServerList.xml</geoserverList>
			
            geoserverList>/home/carlo/work/project/Lamma/trunk/lamma_2012/GEOBATCH_CONFIG_DIR/commons/GeoServerList.xml</geoserverList
            <executorSize>10</executorSize>
			
            <overrideConfigDir>./</overrideConfigDir>
			
        </GeoServerReloadConfiguration>-->

    </EventConsumerConfiguration>
    
    <ListenerConfigurations>
        <LoggingProgressListener>
            <serviceID>loggingListenerService</serviceID>
            <id>NURCModelsLogger</id>
            <loggerName>it.geosolutions.geobatch</loggerName>
        </LoggingProgressListener>
        <CumulatingProgressListener>
            <serviceID>cumulatingListenerService</serviceID>
            <id>NURCModelsCumulator</id>
        </CumulatingProgressListener>
        <StatusProgressListener>
            <serviceID>statusListenerService</serviceID>
            <id>NURCModelsStatus</id>
        </StatusProgressListener>
    </ListenerConfigurations>
</FlowConfiguration>
